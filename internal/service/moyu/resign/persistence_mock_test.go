// Code generated by MockGen. DO NOT EDIT.
// Source: i_persistence.go

// Package resign is a generated GoMock package.
package resign

import (
	goneMock "github.com/gone-io/gone"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "gitlab.openviewtech.com/moyu-chat/moyu-server/internal/interface/entity"
)

// MockiPersistence is a mock of iPersistence interface.
type MockiPersistence struct {
	goneMock.Flag
	ctrl     *gomock.Controller
	recorder *MockiPersistenceMockRecorder
}

// MockiPersistenceMockRecorder is the mock recorder for MockiPersistence.
type MockiPersistenceMockRecorder struct {
	mock *MockiPersistence
}

// NewMockiPersistence creates a new mock instance.
func NewMockiPersistence(ctrl *gomock.Controller) *MockiPersistence {
	mock := &MockiPersistence{ctrl: ctrl}
	mock.recorder = &MockiPersistenceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockiPersistence) EXPECT() *MockiPersistenceMockRecorder {
	return m.recorder
}

// listResignTemplates mocks base method.
func (m *MockiPersistence) listResignTemplates() ([]*entity.ResignTemplate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "listResignTemplates")
	ret0, _ := ret[0].([]*entity.ResignTemplate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// listResignTemplates indicates an expected call of listResignTemplates.
func (mr *MockiPersistenceMockRecorder) listResignTemplates() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "listResignTemplates", reflect.TypeOf((*MockiPersistence)(nil).listResignTemplates))
}
